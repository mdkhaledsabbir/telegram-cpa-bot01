import os
import json
import telebot
from telebot import types
from flask import Flask
import threading
import firebase_admin
from firebase_admin import credentials, db

# ЁЯФР Load Environment Variables
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

# ЁЯФе Firebase Setup
cred_data = json.loads(os.getenv("FIREBASE_CREDENTIALS"))
cred = credentials.Certificate(cred_data)
firebase_admin.initialize_app(cred, {
    'databaseURL': os.getenv("FIREBASE_DB_URL")
})

bot = telebot.TeleBot(BOT_TOKEN)

# ЁЯУМ Custom Buttons
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = [
        "ЁЯОп ржЯрж╛рж╕рзНржХ ржХрж░рзБржи", "ЁЯУ╖ рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ рж╕рж╛ржмржорж┐ржЯ", "ЁЯТ░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕", "ЁЯСл рж░рзЗржлрж╛рж░ ржХрж░рзБржи",
        "тД╣я╕П ржирж┐рзЯржорж╛ржмрж▓рзА", "ЁЯУд ржЙржЗржержбрзНрж░ ржХрж░рзБржи", "ЁЯзСтАНЁЯТ╝ ржЕрзНржпрж╛ржбржорж┐ржи", "ЁЯУИ ржЖржорж╛рж░ рж░рж┐ржкрзЛрж░рзНржЯ", "ЁЯУЮ ржпрзЛржЧрж╛ржпрзЛржЧ"
    ]
    markup.add(*buttons)
    return markup

# ЁЯЯв Start Command
@bot.message_handler(commands=['start'])
def start(msg):
    user_id = str(msg.chat.id)
    ref_id = str(msg.text.split()[1]) if len(msg.text.split()) > 1 else None
    user_ref = db.reference(f'users/{user_id}')

    if not user_ref.get():
        user_ref.set({
            'balance': 0,
            'referrals': 0,
            'screenshots': [],
            'submitted': False
        })
        if ref_id and ref_id != user_id:
            ref_ref = db.reference(f'users/{ref_id}')
            if ref_ref.get():
                ref_ref.child('referrals').set(ref_ref.child('referrals').get() + 1)
                ref_bonus = 10
                ref_ref.child('balance').set(ref_ref.child('balance').get() + ref_bonus)
                bot.send_message(int(ref_id), f'ЁЯОЙ ржПржХржЬржи ржирждрзБржи рж░рзЗржлрж╛рж░рзЗрж▓ ржЬрзЯрзЗржи ржХрж░рзЗржЫрзЗ! ржЖржкржирж┐ {ref_bonus} ржЯрж╛ржХрж╛ ржкрзЗрзЯрзЗржЫрзЗржиред')

    bot.send_message(msg.chat.id, "ЁЯОЙ рж╕рзНржмрж╛ржЧрждржо! ржЖржкржирж╛рж░ ржорзЗржирзБ ржерзЗржХрзЗ ржЕржкрж╢ржи ржмрзЗржЫрзЗ ржирж┐ржиред", reply_markup=main_menu())

# ЁЯОп Task Show
@bot.message_handler(func=lambda msg: msg.text == "ЁЯОп ржЯрж╛рж╕рзНржХ ржХрж░рзБржи")
def task(msg):
    task_text = "ЁЯУв ржирж┐ржЪрзЗрж░ ржЯрж╛рж╕рзНржХржЧрзБрж▓рзЛ рж╕ржорзНржкржирзНржи ржХрж░рзБржи:\n\n"
    tasks = {
        "1": "тЬЕ Visit and signup: https://example.com/task1",
        "2": "тЬЕ Complete profile: https://example.com/task2",
        "3": "тЬЕ Download App: https://example.com/task3",
        "4": "тЬЕ Watch 1 video: https://example.com/task4"
    }
    for k, v in tasks.items():
        task_text += f"{k}. {v}\n\n"
    bot.send_message(msg.chat.id, task_text)

# ЁЯУ╖ Screenshot Submission
@bot.message_handler(content_types=['photo'])
def handle_photo(msg):
    user_id = str(msg.chat.id)
    screenshot_ref = db.reference(f'users/{user_id}/screenshots')
    existing = screenshot_ref.get() or []
    if len(existing) >= 3:
        bot.send_message(msg.chat.id, "тЬЕ ржЖржкржирж┐ ржЗрждрзЛржоржзрзНржпрзЗ рзйржЯрж┐ рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ ржЬржорж╛ ржжрж┐рзЯрзЗржЫрзЗржиред ржжрзЯрж╛ ржХрж░рзЗ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржиред")
        return

    existing.append(msg.photo[-1].file_id)
    screenshot_ref.set(existing)

    bot.send_message(msg.chat.id, f"ЁЯУ╕ рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ {len(existing)} ржЬржорж╛ рж╣рзЯрзЗржЫрзЗред")
    bot.forward_message(ADMIN_ID, msg.chat.id, msg.message_id)

    if len(existing) == 3:
        bot.send_message(msg.chat.id, "тЬЕ ржЖржкржирж┐ рзйржЯрж┐ рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЬржорж╛ ржжрж┐рзЯрзЗржЫрзЗржиред ржжрзЯрж╛ ржХрж░рзЗ ржЕржирзБржорзЛржжржирзЗрж░ ржЬржирзНржп ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржиред")

# ЁЯТ░ Balance & Referral
@bot.message_handler(func=lambda msg: msg.text == "ЁЯТ░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕")
def balance(msg):
    user_id = str(msg.chat.id)
    data = db.reference(f'users/{user_id}').get()
    bal = data.get('balance', 0)
    refs = data.get('referrals', 0)
    bot.send_message(msg.chat.id, f"ЁЯТ░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕: {bal} ржЯрж╛ржХрж╛\nЁЯСе рж░рзЗржлрж╛рж░: {refs} ржЬржи")

# ЁЯСе Referral
@bot.message_handler(func=lambda msg: msg.text == "ЁЯСл рж░рзЗржлрж╛рж░ ржХрж░рзБржи")
def refer(msg):
    link = f"https://t.me/myoffer363bot?start={msg.chat.id}"
    bot.send_message(msg.chat.id, f"ЁЯУв ржПржЗ рж▓рж┐ржВржХрзЗ ржмржирзНржзрзБржжрзЗрж░ ржЗржиржнрж╛ржЗржЯ ржХрж░рзБржи:\n{link}")

# ЁЯзСтАНЁЯТ╝ Admin Panel
@bot.message_handler(func=lambda msg: msg.text == "ЁЯзСтАНЁЯТ╝ ржЕрзНржпрж╛ржбржорж┐ржи" and msg.chat.id == ADMIN_ID)
def admin(msg):
    all_users = db.reference('users').get() or {}
    msg_text = f"ЁЯУК ржорзЛржЯ ржЗржЙржЬрж╛рж░: {len(all_users)} ржЬржи\n"
    bot.send_message(msg.chat.id, msg_text)

# ЁЯУд Withdraw
@bot.message_handler(func=lambda msg: msg.text == "ЁЯУд ржЙржЗржержбрзНрж░ ржХрж░рзБржи")
def withdraw(msg):
    bot.send_message(msg.chat.id, "ЁЯТ│ ржЙржЗржержбрзНрж░ ржХрж░рждрзЗ ржЪрж╛ржЗрж▓рзЗ ржЖржкржирж╛рж░ ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржХржоржкржХрзНрж╖рзЗ рззрзжрзжрзж ржЯрж╛ржХрж╛ рж╣рждрзЗ рж╣ржмрзЗред\n\nBkash, Nagad ржмрж╛ Rocket ржирж╛ржорзНржмрж╛рж░ ржкрж╛ржарж╛ржи:")

# тД╣я╕П Rules
@bot.message_handler(func=lambda msg: msg.text == "тД╣я╕П ржирж┐рзЯржорж╛ржмрж▓рзА")
def rules(msg):
    bot.send_message(msg.chat.id, "ЁЯУМ ржирж┐рзЯржорж╛ржмрж▓рзА:\n\nрзз. рж╕ржм ржЯрж╛рж╕рзНржХ рж╕рждрзНржпржнрж╛ржмрзЗ ржХрж░рждрзЗ рж╣ржмрзЗред\nрзи. ржнрзБрзЯрж╛ рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ ржжрж┐рж▓рзЗ ржЕрзНржпрж╛ржХрж╛ржЙржирзНржЯ ржмрзНрж▓ржХ рж╣ржмрзЗред")

# ЁЯУЮ Contact
@bot.message_handler(func=lambda msg: msg.text == "ЁЯУЮ ржпрзЛржЧрж╛ржпрзЛржЧ")
def contact(msg):
    bot.send_message(msg.chat.id, "тЬЙя╕П ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи: @yourusername")

# ЁЯУИ Report
@bot.message_handler(func=lambda msg: msg.text == "ЁЯУИ ржЖржорж╛рж░ рж░рж┐ржкрзЛрж░рзНржЯ")
def report(msg):
    user_id = str(msg.chat.id)
    data = db.reference(f'users/{user_id}').get()
    if not data:
        bot.send_message(msg.chat.id, "ЁЯФН ржХрзЛржирзЛ рждржерзНржп ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐ред")
        return
    screenshots = data.get('screenshots', [])
    refs = data.get('referrals', 0)
    bal = data.get('balance', 0)
    bot.send_message(msg.chat.id, f"ЁЯУЭ рж░рж┐ржкрзЛрж░рзНржЯ:\nрж╕рзНржХрзНрж░рж┐ржирж╢ржЯ ржЬржорж╛: {len(screenshots)} ржЯрж┐\nрж░рзЗржлрж╛рж░: {refs} ржЬржи\nржмрзНржпрж╛рж▓рзЗржирзНрж╕: {bal} ржЯрж╛ржХрж╛")

# ЁЯМР Fake HTTP Server for Render Web Service
app = Flask(__name__)

@app.route('/')
def home():
    return "ЁЯдЦ Bot is alive and running."

def run_http():
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

# ЁЯФБ Run Web Server & Start Bot
threading.Thread(target=run_http).start()
print("тЬЕ Bot is running...")
bot.infinity_polling()
